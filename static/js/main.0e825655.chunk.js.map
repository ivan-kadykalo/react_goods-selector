{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","title","selectedGoods","removeAll","setState","setTitle","addWord","word","newSelectedGoods","removeWord","removedElem","splice","indexOf","arr","length","tempTitle","join","lastIndex","lastIndexOf","slice","this","className","map","isSelected","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,MAAO,oBACPC,cAAe,CAAC,Q,EAWlBC,UAAY,WACV,EAAKC,SAAS,CACZH,MAAO,EAAKI,SAAS,IACrBH,cAAe,M,EAInBI,QAAU,SAACC,GACT,IAAQL,EAAkB,EAAKF,MAAvBE,cACFM,EAAgB,sBAAON,GAAP,CAAsBK,IAE5C,EAAKH,SAAS,CACZH,MAAO,EAAKI,SAASG,GACrBN,cAAeM,K,EAInBC,WAAa,SAACF,GACZ,IAAQL,EAAkB,EAAKF,MAAvBE,cACFQ,EAAW,YAAOR,GAExBQ,EAAYC,OAAOT,EAAcU,QAAQL,GAAO,GAChD,EAAKH,SAAS,CACZH,MAAO,EAAKI,SAASK,GACrBR,cAAeQ,K,EAInBL,SAAW,SAACQ,GACV,GAAmB,IAAfA,EAAIC,OACN,MAAO,oBAGT,GAAmB,IAAfD,EAAIC,OACN,MAAM,GAAN,OAAUD,EAAI,GAAd,gBAGF,IAAME,EAAYF,EAAIG,KAAK,MACrBC,EAAYF,EAAUG,YAAY,KAExC,MAAM,GAAN,OAAUH,EAAUI,MAAM,EAAGF,GAA7B,gBAA+CF,EAAUI,MAAMF,EAAY,GAA3E,iB,uDAhDF,WACE,IAAQf,EAAkBkB,KAAKpB,MAAvBE,cAERkB,KAAKhB,SAAS,CACZH,MAAOmB,KAAKf,SAASH,O,oBA+CzB,WAAU,IAAD,OACP,EAAiCkB,KAAKpB,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKmB,UAAU,MAAf,UACE,6BAAKpB,IAEL,qBAAKoB,UAAU,YAAf,SAEIvB,EAAgBwB,KAAI,SAAAf,GAClB,IAAMgB,EAAarB,EAAcsB,SAASjB,GAE1C,OACE,sBACEc,UAAS,qBACOE,GAAc,wBAFhC,UAME,sBAAMF,UAAU,mBAAhB,SACGd,IAGH,wBACEc,UAAU,SACVI,KAAK,SACLC,QAAS,WACP,OAAOH,EACH,EAAKd,WAAWF,GAChB,EAAKD,QAAQC,IANrB,SAUIgB,EACI,SACA,aAlBHhB,QA2Bf,wBACEkB,KAAK,SACLC,QAASN,KAAKjB,UACdkB,UAAS,4CAEoB,IAAzBnB,EAAcY,QAAgB,gBALpC,0B,GArGUa,IAAMC,WAoHT7B,ICtIf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e825655.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  title: string;\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    title: 'No goods selected',\n    selectedGoods: ['Jam'],\n  };\n\n  componentDidMount() {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      title: this.setTitle(selectedGoods),\n    });\n  }\n\n  removeAll = () => {\n    this.setState({\n      title: this.setTitle([]),\n      selectedGoods: [],\n    });\n  };\n\n  addWord = (word: string) => {\n    const { selectedGoods } = this.state;\n    const newSelectedGoods = [...selectedGoods, word];\n\n    this.setState({\n      title: this.setTitle(newSelectedGoods),\n      selectedGoods: newSelectedGoods,\n    });\n  };\n\n  removeWord = (word: string) => {\n    const { selectedGoods } = this.state;\n    const removedElem = [...selectedGoods];\n\n    removedElem.splice(selectedGoods.indexOf(word), 1);\n    this.setState({\n      title: this.setTitle(removedElem),\n      selectedGoods: removedElem,\n    });\n  };\n\n  setTitle = (arr: string[]) => {\n    if (arr.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (arr.length === 1) {\n      return `${arr[0]} is selected`;\n    }\n\n    const tempTitle = arr.join(', ');\n    const lastIndex = tempTitle.lastIndexOf(',');\n\n    return `${tempTitle.slice(0, lastIndex)} and ${tempTitle.slice(lastIndex + 1)} is selected`;\n  };\n\n  render() {\n    const { title, selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>{title}</h1>\n\n        <div className=\"app__list\">\n          {\n            goodsFromServer.map(word => {\n              const isSelected = selectedGoods.includes(word);\n\n              return (\n                <div\n                  className={\n                    `goods-line ${isSelected && 'goods-line--selected'}`\n                  }\n                  key={word}\n                >\n                  <span className=\"goods-line__word\">\n                    {word}\n                  </span>\n\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      return isSelected\n                        ? this.removeWord(word)\n                        : this.addWord(word);\n                    }}\n                  >\n                    {\n                      isSelected\n                        ? 'Remove'\n                        : 'Select'\n                    }\n                  </button>\n                </div>\n              );\n            })\n          }\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={this.removeAll}\n          className={\n            `button button--clear\n            ${selectedGoods.length === 0 && 'button--hide'}`\n          }\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}