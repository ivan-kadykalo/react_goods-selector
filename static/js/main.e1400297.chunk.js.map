{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","removeAll","setState","addWord","word","removeWord","removedElem","splice","indexOf","setTitle","arr","length","slice","join","this","className","map","isSelected","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,UAAY,WACV,EAAKC,SAAS,CACZF,cAAe,M,EAInBG,QAAU,SAACC,GACT,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CACZF,cAAc,GAAD,mBAAMA,GAAN,CAAqBI,O,EAItCC,WAAa,SAACD,GACZ,IAAQJ,EAAkB,EAAKD,MAAvBC,cACFM,EAAW,YAAON,GAExBM,EAAYC,OAAOP,EAAcQ,QAAQJ,GAAO,GAChD,EAAKF,SAAS,CACZF,cAAeM,K,EAInBG,SAAW,SAACC,GACV,OAAQA,EAAIC,QACV,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAI,GAAd,gBACF,QACE,MAAM,GAAN,OAAUA,EAAIE,MAAM,GAAI,GAAGC,KAAK,MAAhC,gBAA6CH,EAAIA,EAAIC,OAAS,GAA9D,mB,4CAIN,WAAU,IAAD,OACCX,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,KAAKL,SAAST,KAE3C,qBAAKe,UAAU,YAAf,SAEIlB,EAAgBmB,KAAI,SAAAZ,GAClB,IAAMa,EAAajB,EAAckB,SAASd,GAE1C,OACE,sBACEW,UAAS,qBAAgBE,GAAc,wBADzC,UAIE,sBAAMF,UAAU,mBAAhB,SACGX,IAGH,wBACEW,UAAU,SACVI,KAAK,SACLC,QAAS,kBACPH,EAAa,EAAKZ,WAAWD,GAAQ,EAAKD,QAAQC,IAJtD,SAOGa,EAAa,SAAW,aAbtBb,QAqBf,wBACEe,KAAK,SACLC,QAASN,KAAKb,UACdc,UAAS,4CAEoB,IAAzBf,EAAcW,QAAgB,gBALpC,0B,GA5EUU,IAAMC,WA2FTxB,IC5GfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1400297.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  removeAll = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  addWord = (word: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: [...selectedGoods, word],\n    });\n  };\n\n  removeWord = (word: string) => {\n    const { selectedGoods } = this.state;\n    const removedElem = [...selectedGoods];\n\n    removedElem.splice(selectedGoods.indexOf(word), 1);\n    this.setState({\n      selectedGoods: removedElem,\n    });\n  };\n\n  setTitle = (arr: string[]) => {\n    switch (arr.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${arr[0]} is selected`;\n      default:\n        return `${arr.slice(0, -1).join(', ')} and ${arr[arr.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__header\">{this.setTitle(selectedGoods)}</h1>\n\n        <div className=\"app__list\">\n          {\n            goodsFromServer.map(word => {\n              const isSelected = selectedGoods.includes(word);\n\n              return (\n                <div\n                  className={`goods-line ${isSelected && 'goods-line--selected'}`}\n                  key={word}\n                >\n                  <span className=\"goods-line__word\">\n                    {word}\n                  </span>\n\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => (\n                      isSelected ? this.removeWord(word) : this.addWord(word)\n                    )}\n                  >\n                    {isSelected ? 'Remove' : 'Select'}\n                  </button>\n                </div>\n              );\n            })\n          }\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={this.removeAll}\n          className={\n            `button button--clear\n            ${selectedGoods.length === 0 && 'button--hide'}`\n          }\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}